/*
3 Sum problem
Always put \n at the very end otherwise program goes crazy with wrong output like a bitch
*/


#include<bits/stdc++.h>

using namespace std;

#define DEBUG(x) cout << '>' << #x << ':' << x << endl;
#define REP(i,n) for(int i=0;i<(n);i++)
#define FOR(i,a,b) for(int i=(a);i<=(b);i++)
#define FORD(i,a,b) for(int i=(a);i>=(b);i--)
#define all(c) c.begin(),c.end()

#define M 1000000007


typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<string, string> pss;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<pii> vii;
typedef vector<ll> vl;
typedef vector<vl> vvl;

#define mp make_pair
#define pb push_back

inline bool EQ(double a, double b) { return fabs(a-b) < 1e-9; }
const int INF = 1<<29;
inline int two(int n) { return 1 << n; }
inline int test(int n, int b) { return (n>>b)&1; }
inline void set_bit(int & n, int b) { n |= two(b); }
inline void unset_bit(int & n, int b) { n &= ~two(b); }
inline int last_bit(int n) { return n & (-n); }
inline int ones(int n) { int res = 0; while(n && ++res) n-=n&(-n); return res; }
template<class T> void chmax(T & a, const T & b) { a = max(a, b); }
template<class T> void chmin(T & a, const T & b) { a = min(a, b); }
/////////////////////////////////////////////////////////////////////
int main()
{
    //ofstream fout;
    // ifstream fin;
//	fout.open("OUTPUT.txt",ios::out);
//	fin.open("INPUT.txt",ios::in);
   //  FILE *fptr = fopen("sample.txt", "w");
    std::ios::sync_with_stdio(false);

    set <int> value;

    REP(i,21)
        value.insert(i);

    for(int i = 0;i<=20;i++)
    {
        value.insert(2*i);
        value.insert(3*i);
    }

    value.insert(50);
    vi values(value.size());

    for(auto x:value)
        values.pb(x);

    int n;
    cin >> n;
    while(n>0)
    {
      //   vector <vvi> check(60, vector<vector <int>>(60,vector <int> (60)));
      set <multiset<int>> S;

        for(unsigned int i = 0;i<values.size()&&values[i]<=n;i++)
        {
            int x = values[i];
            for(unsigned int j = i;j<values.size()&&values[i] + values[j] <= n;j++)
            {
                int y = values[j];
                int k = n -(x+y);
                if(binary_search(all(values),k))
                   {
//                          DEBUG(x);
//                          DEBUG(y);
//                          DEBUG(k);
                       multiset <int> Ms;
                       Ms.insert(values[i]);
                       Ms.insert(values[j]);
                       Ms.insert(k);
                       S.insert(Ms);

                   }
            }
        }

        int permutations = 0,combinations = 0;

        for(auto Ms : S)
        {
            auto it = Ms.begin();
            int x = *it++;
            int y = *(it++);
            int z = *(it);
//


            if(x!=y && y!=z)
            {
                permutations += 6;
                combinations += 1;
            }

            else if(x== y && y==z)
            {

                permutations++;
                combinations++;
            }
            else
            {
                 permutations += 3;
                combinations += 1;
            }
        }

     //   cout << permutations << "\t" << combinations << endl;

        if(permutations == 0)
            printf("THE SCORE OF %d CANNOT BE MADE WITH THREE DARTS.\n",n);
        else
        {
            printf("NUMBER OF COMBINATIONS THAT SCORES %d IS %d.\n",n,combinations);
            printf("NUMBER OF PERMUTATIONS THAT SCORES %d IS %d.\n",n,permutations);
        }

        printf("**********************************************************************\n");
        cin >> n;
    }
    printf("END OF OUTPUT\n");

  //  fclose(fptr);
    return 0;
}
/*
162
175
2
68
211
114
-100
*/
